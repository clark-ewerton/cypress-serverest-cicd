trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  nodeVersion: '18.x'

stages:
  - stage: CleanArtifacts
    displayName: 'Clean gh-pages branch'
    jobs:
    - job: CleanArtifactsFromGhPages
      displayName: 'Clean artifacts from gh-pages branch'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self
          clean: true
          persistCredentials: true

        - script: |
            git config --global user.name "azure-pipelines[bot]"
            git config --global user.email "azure-pipelines@dev.azure.com"

            git fetch origin

            # verifies if gh-pages branch already exists
            if git ls-remote --exit-code --heads origin gh-pages; then
              echo "gh-pages branch already exists. Perform checkout..."
              git checkout gh-pages
            else
              echo "gh-pages branch does not exist. Creating..."
              git checkout --orphan gh-pages
              git rm -rf .
              echo "Initialization of gh-pages" > index.html
              git add index.html
              git commit -m "Init gh-pages"
              git push origin gh-pages
            fi

            # Clean branch files
            git rm -rf . || true
            git clean -fxd
            git commit --allow-empty -m "Complete cleanup of gh-pages"
            git push origin gh-pages
          displayName: 'Verifies/creates and clean branch gh-pages'

  - stage: CI
    dependsOn: CleanArtifacts
    displayName: 'Run Cypress Tests'
    jobs:
      - job: CypressTests
        strategy:
          matrix:
            chrome:
              browser: chrome
            edge:
              browser: edge
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)

          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(HOME)/.npm

          - script: npm install
            displayName: 'Install dependencies'

          - script: npm run lint:fix
            displayName: 'Run ESLint'

          - script: |
              npx cypress run --browser $(browser) --spec "cypress/e2e/gui/authentication/loginGUI.cy.js,cypress/e2e/api/authentication/loginAPI.cy.js" --reporter mochawesome --reporter-options reportDir=cypress/reports/mochawesome,overwrite=false,html=false,json=true
            displayName: 'Run Cypress'
            continueOnError: true

          - script: npm run report:merge
            displayName: 'Merge test reports'

          - script: npm run report:generate
            displayName: 'Generate HTML report'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'cypress'
              artifactName: 'cypress-artifacts-$(browser)'
              publishLocation: 'Container'
              condition: always()

  - stage: CD
    dependsOn: CI
    displayName: 'Publish to GitHub Pages'
    jobs:
      - job: DeployAll
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
            fetchDepth: 0

    # Download artifacts from both browsers (chrome and edge)
          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: 'cypress-artifacts-chrome'
              downloadPath: $(Build.SourcesDirectory)/
          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: 'cypress-artifacts-edge'
              downloadPath: $(Build.SourcesDirectory)/

          # Setup files to be pushed to gh-pages branch
          - script: |
              mkdir -p ./chrome/videos ./edge/videos
              mkdir -p ./chrome/screenshots ./edge/screenshots

              # Copies necessary files from chrome artifact
              find ./cypress-artifacts-chrome/videos -type f -name "*.mp4" -exec cp {} ./chrome/videos/ \;
              find ./cypress-artifacts-chrome/screenshots -type f -name "*.png" -exec cp {} ./chrome/screenshots/ \;
              cp -r ./cypress-artifacts-chrome/reports/mochawesome/* ./chrome/

              # Copies necessary files from edge artifact
              find ./cypress-artifacts-edge/videos -type f -name "*.mp4" -exec cp {} ./edge/videos/ \;
              find ./cypress-artifacts-edge/screenshots -type f -name "*.png" -exec cp {} ./edge/screenshots/ \;
              cp -r ./cypress-artifacts-edge/reports/mochawesome/* ./edge/
            displayName: 'Organize artifacts'

          # Generates index.html (generic reports that is gonna redirect you to either chrome or edge)
          - script: |
              mkdir -p ./public
              node generate-index.js
              cp -r ./public/index.html ./
            displayName: 'Generate Index'

          # Perform deploy to github Pages
          - script: |
              git config user.name "azure-pipelines[bot]"
              git config user.email "azure-pipelines@bot.com"

              git fetch origin gh-pages
              git checkout gh-pages || git checkout -b gh-pages

              git add -f index.html ./chrome/ ./edge/
              git commit -m "Deploy Cypress reports for ALL browsers"
              git push origin gh-pages
            displayName: 'Deploy to gh-pages'