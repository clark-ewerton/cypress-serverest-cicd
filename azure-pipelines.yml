trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  nodeVersion: '18.x'

stages:
  - stage: CleanArtifacts
    displayName: 'Clean gh-pages branch'
    jobs:
      - job: CleanGH
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
            persistCredentials: true
            clean: false
            fetchDepth: 0

          - script: |
              git fetch origin gh-pages
              git checkout gh-pages || git checkout --orphan gh-pages

              git config user.name "azure-pipelines[bot]"
              git config user.email "azure-pipelines@bot.com"

              find . -maxdepth 1 ! -name '.git' ! -name '.' -exec rm -rf {} +
              git add -A
              git commit -m "Cleanup gh-pages" || echo "Nothing to commit"
              git push origin gh-pages
            displayName: 'Clean and push gh-pages'

  - stage: CI
    dependsOn: CleanArtifacts
    displayName: 'Run Cypress Tests'
    jobs:
      - job: CypressTests
        strategy:
          matrix:
            chrome:
              browser: chrome
            edge:
              browser: edge
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)

          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(HOME)/.npm

          - script: npm install
            displayName: 'Install dependencies'

          - script: npm run lint:fix
            displayName: 'Run ESLint'

          - script: |
              npx cypress run --browser $(browser) --spec "cypress/e2e/gui/authentication/loginGUI.cy.js,cypress/e2e/api/authentication/loginAPI.cy.js" --reporter mochawesome --reporter-options reportDir=cypress/reports/mochawesome,overwrite=false,html=false,json=true
            displayName: 'Run Cypress'
            continueOnError: true

          - script: npm run report:merge
            displayName: 'Merge test reports'

          - script: npm run report:generate
            displayName: 'Generate HTML report'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'cypress'
              artifactName: 'cypress-artifacts-$(browser)'
              publishLocation: 'Container'
              condition: always()

  - stage: CD
    dependsOn: CI
    displayName: 'Publish to GitHub Pages'
    jobs:
      - job: Deploy
        strategy:
          matrix:
            chrome:
              browser: chrome
            edge:
              browser: edge
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: 'cypress-artifacts-$(browser)'
              downloadPath: $(Build.SourcesDirectory)/artifacts

          - script: |
              mkdir -p ./public/$(browser)/videos
              mkdir -p ./public/$(browser)/screenshots
              mkdir -p ./public/$(browser)/mochawesome-report

              cp -r ./artifacts/cypress/videos/* ./public/$(browser)/videos/ || true
              cp -r ./artifacts/cypress/screenshots/* ./public/$(browser)/screenshots/ || true
              cp -r ./artifacts/cypress/reports/mochawesome/* ./public/$(browser)/ || true
              cp -r ./artifacts/cypress/mochawesome-report/* ./public/$(browser)/mochawesome-report/ || true
            displayName: 'Organize artifacts'

          - script: |
              mkdir -p ./public
              node generate-index.js
            displayName: 'Generate Index'

          - script: |
              git config user.name "azure-pipelines[bot]"
              git config user.email "azure-pipelines@bot.com"

              git checkout gh-pages
              cp -r ./public/* .
              git add .
              git commit -m "Deploy Cypress reports"
              git push origin gh-pages
            displayName: 'Deploy to gh-pages'
