name: Cypress CI CD Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Clean_artifacts_from_gh-pages_branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'gh-pages'

      - name: Clean gh-pages branch
        run: |
          # Configuração segura do Git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
          # Remove all files except .git
          if [ -d ".git" ]; then
            git rm -rf . || true
            git clean -fxd
            git commit --allow-empty -m "Complete cleanup of gh-pages"
            git push origin gh-pages
          else
            echo "Branch gh-pages empty or not initialized"
          fi

  CI:
    runs-on: ubuntu-latest
    needs: Clean_artifacts_from_gh-pages_branch
    strategy:
      matrix:
        browser: [chrome, edge]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        
      - name: Run ESLint
        run: npm run lint:fix

      - name: Run Cypress tests
        run: |
          npx cypress run --browser ${{ matrix.browser }} --spec "cypress/e2e/gui/authentication/loginGUI.cy.js","cypress/e2e/api/authentication/loginAPI.cy.js" --reporter mochawesome --reporter-options reportDir=cypress/reports/mochawesome,overwrite=false,html=false,json=true
        continue-on-error: true
        
      - name: Merge test reports
        run: npm run report:merge

      - name: Generate HTML report
        run: npm run report:generate

      - name: Upload Cypress Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts-${{ matrix.browser }}
          path: |
            cypress/videos/
            cypress/screenshots/
            cypress/reports/mochawesome/
            mochawesome-report/

  CD:
    runs-on: ubuntu-latest
    needs: CI
    strategy:
      matrix:
        browser: [chrome, edge]
      # Force sequential execution
      max-parallel: 1 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: cypress-artifacts-${{ matrix.browser }}
          path: ./

      - name: Verifies content of files after download
        run: |
          echo "Listing downloaded files:"
          ls -R ./cypress

      - name: Copy artifacts
        run: |
          mkdir -p ./public/${{ matrix.browser }}/videos
          mkdir -p ./public/${{ matrix.browser }}/screenshots
          mkdir -p ./public/${{ matrix.browser }}/mochawesome-report

          echo "Copy mp4 videos and paste it into one folder"
          ls -R ./cypress/videos/ || true
          find ./cypress/videos/ -name "*.mp4" -exec cp {} ./public/${{ matrix.browser }}/videos/ \;

          echo "Content of ./public/videos after copy"
          ls -R ./public/${{ matrix.browser }}/videos || true

          cp -r ./cypress/screenshots/* ./public/${{ matrix.browser }}/screenshots/ || true
          cp -r ./cypress/reports/mochawesome/* ./public/${{ matrix.browser }}/ || true
          cp -r ./cypress/mochawesome-report/* ./public/${{ matrix.browser }}/mochawesome-report/ || true

      - name: Generate Index Page
        run: |
          mkdir -p ./public
          node generate-index.js

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
